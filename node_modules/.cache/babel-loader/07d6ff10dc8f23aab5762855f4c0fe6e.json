{"ast":null,"code":"var _jsxFileName = \"/home/honeycomb/workspace/simple-window-switcher/src/App.tsx\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const handleSuccess = stream => {\n    startButton.disabled = true;\n    const video = document.querySelector('video');\n    video.srcObject = stream; // demonstrates how to detect that the user has stopped\n    // sharing the screen via the browser UI.\n\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      errorMsg('The user has ended sharing the screen');\n      startButton.disabled = false;\n    });\n  };\n\n  const handleError = error => {\n    console.log(\"errorです\", error);\n  };\n\n  const errorMsg = (msg, error) => {\n    const errorElement = document.querySelector('#errorMsg');\n    errorElement.innerHTML += `<p>${msg}</p>`;\n\n    if (typeof error !== 'undefined') {\n      console.error(error);\n    }\n  };\n\n  const onClick = () => {\n    const hoge = navigator.mediaDevices.getDisplayMedia().then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"gum-local\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"startButton\",\n          onClick: onClick,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"errorMsg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/honeycomb/workspace/simple-window-switcher/src/App.tsx"],"names":["App","handleSuccess","stream","startButton","disabled","video","document","querySelector","srcObject","getVideoTracks","addEventListener","errorMsg","handleError","error","console","log","msg","errorElement","innerHTML","onClick","hoge","navigator","mediaDevices","getDisplayMedia","then"],"mappings":";AAAA,OAAO,WAAP;;;AAEA,SAASA,GAAT,GAAe;AAEb,QAAMC,aAAa,GAAIC,MAAD,IAAiB;AACrCC,IAAAA,WAAW,CAACC,QAAZ,GAAuB,IAAvB;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,SAAN,GAAkBN,MAAlB,CAHqC,CAKrC;AACA;;AACAA,IAAAA,MAAM,CAACO,cAAP,GAAwB,CAAxB,EAA2BC,gBAA3B,CAA4C,OAA5C,EAAqD,MAAM;AACzDC,MAAAA,QAAQ,CAAC,uCAAD,CAAR;AACAR,MAAAA,WAAW,CAACC,QAAZ,GAAuB,KAAvB;AACD,KAHD;AAID,GAXD;;AAaA,QAAMQ,WAAW,GAAIC,KAAD,IAAgB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,GAFD;;AAIA,QAAMF,QAAQ,GAAG,CAACK,GAAD,EAAcH,KAAd,KAA6B;AAC5C,UAAMI,YAAY,GAAGX,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAArB;AACAU,IAAAA,YAAY,CAACC,SAAb,IAA2B,MAAKF,GAAI,MAApC;;AACA,QAAI,OAAOH,KAAP,KAAiB,WAArB,EAAkC;AAChCC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAND;;AAQA,QAAMM,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAS,GAAGC,SAAS,CAACC,YAAV,CAAuBC,eAAvB,GACfC,IADe,EAAlB;AAED,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACE;AAAO,UAAA,EAAE,EAAC,WAAV;AAAsB,UAAA,QAAQ,MAA9B;AAA+B,UAAA,WAAW,MAA1C;AAA2C,UAAA,KAAK;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAEL,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KA3CQnB,G;AA6CT,eAAeA,GAAf","sourcesContent":["import './App.css';\n\nfunction App() {\n\n  const handleSuccess = (stream: any) => {\n    startButton.disabled = true;\n    const video = document.querySelector('video');\n    video.srcObject = stream;\n\n    // demonstrates how to detect that the user has stopped\n    // sharing the screen via the browser UI.\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      errorMsg('The user has ended sharing the screen');\n      startButton.disabled = false;\n    });\n  }\n\n  const handleError = (error: any) => {\n    console.log(\"errorです\", error);\n  }\n\n  const errorMsg = (msg: string, error: any) => {\n    const errorElement = document.querySelector('#errorMsg');\n    errorElement.innerHTML += `<p>${msg}</p>`;\n    if (typeof error !== 'undefined') {\n      console.error(error);\n    }\n  }\n\n  const onClick = () => {\n    const hoge: any = navigator.mediaDevices.getDisplayMedia()\n      .then();\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"container\">\n          <video id=\"gum-local\" autoPlay playsInline muted></video>\n          <button id=\"startButton\" onClick={onClick}>Start</button>\n          <div id=\"errorMsg\"></div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}