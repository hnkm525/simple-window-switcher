[{"/home/honeycomb/workspace/simple-window-switcher/src/index.tsx":"1","/home/honeycomb/workspace/simple-window-switcher/src/reportWebVitals.ts":"2","/home/honeycomb/workspace/simple-window-switcher/src/App.tsx":"3"},{"size":500,"mtime":1636975689280,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1636975689280,"results":"6","hashOfConfig":"5"},{"size":1970,"mtime":1636987921390,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3y6j46",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/home/honeycomb/workspace/simple-window-switcher/src/index.tsx",[],"/home/honeycomb/workspace/simple-window-switcher/src/reportWebVitals.ts",[],"/home/honeycomb/workspace/simple-window-switcher/src/App.tsx",["15","16"],"import './App.css';\nimport { useEffect } from \"react\"\n\nfunction App() {\n\n  const startButton: any = document.getElementById(\"startButton\");\n  console.log(startButton);\n\n  let localVideo: any;\n  const audioCheck = document.getElementById('audio_check');\n  let localStream: any = null;\n\n\n  const playVideo = async (element: any, stream: any) => {\n    console.log(\"element\", element);\n    console.log(\"stream\", stream);\n    \n\n    element.srcObject = stream;\n    try {\n      await element.play();\n    }\n    catch (err) {\n      console.error(err)\n    };\n  }\n\n  const onClickStart = async () => {\n    const option = { video: { frameRate: 60 }, audio: true };\n    try {\n      await navigator.mediaDevices.getDisplayMedia(option)\n      .then((res)=>{\n        playVideo(localVideo, res);\n        localStream = res;\n      });\n      console.log('mediaDevice.getDisplayMediaã€€Screen Capture OK');\n    } catch (err) {\n      console.error('mediaDevice.getDisplayMedia() error:', err);\n    }\n  }\n\n  const onClickStop = (stream:any) => {\n    cleanupVideoElement(localVideo);\n    if (localStream) {\n      stopStream(localStream);\n      localStream = null;\n    }\n  }\n\n  const cleanupVideoElement = (element:any) => {\n    element.pause();\n    element.srcObject = null;\n  }\n\n  const stopStream = (stream: any) => {\n    stream.getTracks().forEach((track: any) => track.stop());\n  }\n\n  useEffect(() => {\n    const startButton: any = document.getElementById(\"startButton\");\n    console.log(startButton);\n    startButton.disabled = false;\n    localVideo = document.getElementById('video');\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"container\">\n          <button id=\"startButton\" onClick={onClickStart}>Start</button>\n          <button id=\"startButton\" onClick={onClickStop}>Stop</button>\n        </div>\n        <video className=\"video\" id=\"video\" autoPlay muted={true}></video>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"17","severity":1,"message":"18","line":10,"column":9,"nodeType":"19","messageId":"20","endLine":10,"endColumn":19},{"ruleId":"21","severity":1,"message":"22","line":63,"column":18,"nodeType":"23","endLine":63,"endColumn":50},"@typescript-eslint/no-unused-vars","'audioCheck' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'localVideo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]